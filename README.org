#+TITLE: LOBcomp
* LOBcomp
** Library of babel compression
*** Store any arbitrarily large string of characters as 3 ints and a bit (coordinates)
Exchange physical storage space for computation/lookup time.
Integer 1 is the base page number.
Integer 2 is the data start (within a page).
Integer 3 is data stop (within a page).
Bit 1 signifies if further recursion is required.

1. Split data into pages
2. Find coordinates for pages matching the data chunks (These initial coordinates are the only ones which will not have the recusion bit set.
3. If coordinates (groups of 3 ints + 1 bit) all fit one page then the coordinates of this page is the final coordinate it will have recursion bit set.
4. If these coordinates do not fit on one page then split the coordinate data into multiple pages and repeat the process.


*** Problem
Requires a system in which the coordinates take up fewer chars than the contents of the pages.
Mapping must be a bijection.



* Thoughts
0000
0001
0010
0011
0100
0101
0110
0111
1000
1001
1010
1011
1100
1101
1110
1111

1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20

101112

9 3


0
1
10
11
100
101
110
111
1000
1001
1010
1011
1100
1101
1110
1111
10000


two pieces of infomation
the data itself and the length of the data.
